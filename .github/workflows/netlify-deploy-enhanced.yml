name: WebWaka Netlify Deployment Enhanced

on:
  push:
    branches: [ master, development ]
  pull_request:
    branches: [ master ]

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'

jobs:
  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Run frontend linting
      run: |
        cd frontend
        npm run lint || true
        
    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --coverage --watchAll=false || true
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
        
    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/dist/

  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install backend dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov bandit safety
        
    - name: Run backend security scan
      run: |
        cd backend
        bandit -r src/ -f json -o bandit-report.json || true
        safety check --json --output safety-report.json || true
        
    - name: Run backend tests
      run: |
        cd backend
        python -m pytest src/ -v --cov=src --cov-report=xml || true
        
    - name: Upload backend test reports
      uses: actions/upload-artifact@v3
      with:
        name: backend-reports
        path: |
          backend/bandit-report.json
          backend/safety-report.json
          backend/coverage.xml

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend, security-scan]
    if: github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        cd ../netlify/functions
        npm install
        
    - name: Build application
      run: |
        cd frontend
        npm run build
        
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v2.0
      with:
        publish-dir: './frontend/dist'
        production-branch: master
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions - WebWaka v${{ github.sha }}"
        enable-pull-request-comment: true
        enable-commit-comment: true
        overwrites-pull-request-comment: true
        functions-dir: './netlify/functions'
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        
    - name: Run post-deployment tests
      run: |
        sleep 30
        curl -f https://webwaka.xyz/api/health || exit 1
        curl -f https://webwaka.xyz/api/status || exit 1
        
    - name: Notify deployment success
      if: success()
      run: |
        echo "üöÄ WebWaka deployed successfully to production!"
        echo "üåê URL: https://webwaka.xyz"
        echo "üìä API Health: https://webwaka.xyz/api/health"
        
    - name: Notify deployment failure
      if: failure()
      run: |
        echo "‚ùå WebWaka deployment failed!"
        echo "Check the logs for details."

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        cd ../netlify/functions
        npm install
        
    - name: Build application
      run: |
        cd frontend
        npm run build
        
    - name: Deploy to Netlify Preview
      uses: nwtgck/actions-netlify@v2.0
      with:
        publish-dir: './frontend/dist'
        production-branch: master
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy preview from GitHub Actions - PR #${{ github.event.number }}"
        enable-pull-request-comment: true
        enable-commit-comment: true
        overwrites-pull-request-comment: true
        functions-dir: './netlify/functions'
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  performance-test:
    name: Performance Testing
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v9
      with:
        urls: |
          https://webwaka.xyz
          https://webwaka.xyz/api/health
          https://webwaka.xyz/api/status
        uploadArtifacts: true
        temporaryPublicStorage: true
        
    - name: Upload performance reports
      uses: actions/upload-artifact@v3
      with:
        name: lighthouse-reports
        path: .lighthouseci/

  notify:
    name: Notify Team
    runs-on: ubuntu-latest
    needs: [build-and-deploy, performance-test]
    if: always() && github.ref == 'refs/heads/master'
    
    steps:
    - name: Notify success
      if: needs.build-and-deploy.result == 'success'
      run: |
        echo "‚úÖ WebWaka deployment completed successfully!"
        echo "üåê Production: https://webwaka.xyz"
        echo "üîó API Health: https://webwaka.xyz/api/health"
        echo "üìä API Status: https://webwaka.xyz/api/status"
        echo "üöÄ Performance tests completed"
        
    - name: Notify failure
      if: needs.build-and-deploy.result == 'failure'
      run: |
        echo "‚ùå WebWaka deployment failed!"
        echo "üîç Check the deployment logs for details"
        echo "üìß Team has been notified"

